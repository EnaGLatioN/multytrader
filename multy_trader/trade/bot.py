import logging
import requests
from multy_trader.settings import TG_TOKEN

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


def notification(entry):
    if chat_id := entry.chat_id:
        send_telegram_message(get_message(entry),chat_id)

def get_message(entry):
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç —Ç–≥"""

    status = entry.status
    status_emoji = {
        'WAIT': '‚è≥',
        'STOPPED': '‚õîÔ∏è',
        'ACTIVE': '‚ôªÔ∏è',
        'COMPLETED': '‚úÖ'
    }.get(status, '‚ùì')
    
    message = (
        f"{status_emoji} –í—Ö–æ–¥ {entry.id}\n"
        f"üìä –°—Ç–∞—Ç—É—Å: {status}\n"
        f"üí∞ –ü—Ä–æ—Ñ–∏—Ç: {entry.profit}\n"
        f"‚öñÔ∏è –ü–ª–µ—á–æ: {entry.shoulder if entry.shoulder else '-'}\n"
        f"üîµ –ö—É—Ä—Å –≤—Ö–æ–¥–∞: {entry.entry_course}\n"
        f"üî¥ –ö—É—Ä—Å –≤—ã—Ö–æ–¥–∞: {entry.exit_course if entry.exit_course else '-'}\n"
        f"üíπ –í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞: {entry.wallet_pair}\n"
        f"üïí –°–æ–∑–¥–∞–Ω: {entry.created_at.strftime('%Y-%m-%d %H:%M')}"
    )
    return message

def send_telegram_message(message, chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Ç–≥"""

    try:
        payload = {
            'chat_id': chat_id,
            'text': message
        }
        response = requests.post(f'https://api.telegram.org/bot{TG_TOKEN}/sendMessage', json=payload)
        if response.status_code != 200:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {response.text}")
        else:
            logger.debug(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ send_telegram_message: {str(e)}")
